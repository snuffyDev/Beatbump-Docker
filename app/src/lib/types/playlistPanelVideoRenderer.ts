// Generated by https://quicktype.io

export interface IPlaylistPanelVideoRenderer {
	title: ShortBylineText;
	longBylineText: LongBylineText;
	thumbnail: IPlaylistPanelVideoRendererThumbnail;
	lengthText: LengthText;
	selected: boolean;
	navigationEndpoint: IPlaylistPanelVideoRendererNavigationEndpoint;
	videoId: string;
	shortBylineText: ShortBylineText;
	trackingParams: string;
	menu: Menu;
	playlistSetVideoId: string;
}

interface LengthText {
	runs: LengthTextRun[];
	accessibility: Accessibility;
}

interface Accessibility {
	accessibilityData: AccessibilityData;
}

interface AccessibilityData {
	label: string;
}

interface LengthTextRun {
	text: string;
}

interface LongBylineText {
	runs: LongBylineTextRun[];
}

interface LongBylineTextRun {
	text: string;
	navigationEndpoint?: RunNavigationEndpoint;
}

interface RunNavigationEndpoint {
	clickTrackingParams: string;
	browseEndpoint: BrowseEndpoint;
}

interface BrowseEndpoint {
	browseId: string;
	browseEndpointContextSupportedConfigs: BrowseEndpointContextSupportedConfigs;
}

interface BrowseEndpointContextSupportedConfigs {
	browseEndpointContextMusicConfig: BrowseEndpointContextMusicConfig;
}

interface BrowseEndpointContextMusicConfig {
	pageType: string;
}

interface Menu {
	menuRenderer: MenuRenderer;
}

interface MenuRenderer {
	items: ItemElement[];
	trackingParams: string;
	accessibility: Accessibility;
}

interface ItemElement {
	menuNavigationItemRenderer?: MenuItemRenderer;
	menuServiceItemRenderer?: MenuItemRenderer;
	toggleMenuServiceItemRenderer?: ToggleMenuServiceItemRenderer;
}

interface MenuItemRenderer {
	text: ShortBylineText;
	icon: Icon;
	navigationEndpoint?: MenuNavigationItemRendererNavigationEndpoint;
	trackingParams: string;
	serviceEndpoint?: ServiceEndpoint;
}

interface Icon {
	iconType: string;
}

interface MenuNavigationItemRendererNavigationEndpoint {
	clickTrackingParams: string;
	watchEndpoint?: PurpleWatchEndpoint;
	addToPlaylistEndpoint?: AddToPlaylistEndpoint;
	browseEndpoint?: BrowseEndpoint;
	shareEntityEndpoint?: ShareEntityEndpoint;
}

interface AddToPlaylistEndpoint {
	videoId: string;
}

interface ShareEntityEndpoint {
	serializedShareEntity: string;
	sharePanelType: string;
}

interface PurpleWatchEndpoint {
	videoId: string;
	playlistId: string;
	params: string;
	loggingContext: LoggingContext;
	watchEndpointMusicSupportedConfigs: PurpleWatchEndpointMusicSupportedConfigs;
}

interface LoggingContext {
	vssLoggingContext: VssLoggingContext;
}

interface VssLoggingContext {
	serializedContextData: string;
}

interface PurpleWatchEndpointMusicSupportedConfigs {
	watchEndpointMusicConfig: PurpleWatchEndpointMusicConfig;
}

interface PurpleWatchEndpointMusicConfig {
	musicVideoType: string;
}

interface ServiceEndpoint {
	clickTrackingParams: string;
	queueAddEndpoint?: QueueAddEndpoint;
	removeFromQueueEndpoint?: RemoveFromQueueEndpoint;
}

interface QueueAddEndpoint {
	queueTarget: AddToPlaylistEndpoint;
	queueInsertPosition: string;
	commands: Command[];
}

interface Command {
	clickTrackingParams: string;
	addToToastAction: AddToToastAction;
}

interface AddToToastAction {
	item: AddToToastActionItem;
}

interface AddToToastActionItem {
	notificationTextRenderer: NotificationTextRenderer;
}

interface NotificationTextRenderer {
	successResponseText: ShortBylineText;
	trackingParams: string;
}

interface ShortBylineText {
	runs: LengthTextRun[];
}

interface RemoveFromQueueEndpoint {
	videoId: string;
	commands: Command[];
}

interface ToggleMenuServiceItemRenderer {
	defaultText: ShortBylineText;
	defaultIcon: Icon;
	defaultServiceEndpoint: DefaultServiceEndpointClass;
	toggledText: ShortBylineText;
	toggledIcon: Icon;
	toggledServiceEndpoint: DefaultServiceEndpointClass;
	trackingParams: string;
}

interface DefaultServiceEndpointClass {
	clickTrackingParams: string;
	likeEndpoint: LikeEndpoint;
}

interface LikeEndpoint {
	status: string;
	target: AddToPlaylistEndpoint;
}

interface IPlaylistPanelVideoRendererNavigationEndpoint {
	clickTrackingParams: string;
	watchEndpoint: FluffyWatchEndpoint;
}

interface FluffyWatchEndpoint {
	videoId: string;
	playlistId: string;
	index: number;
	params: string;
	playerParams: string;
	playlistSetVideoId: string;
	loggingContext: LoggingContext;
	watchEndpointMusicSupportedConfigs: FluffyWatchEndpointMusicSupportedConfigs;
}

interface FluffyWatchEndpointMusicSupportedConfigs {
	watchEndpointMusicConfig: FluffyWatchEndpointMusicConfig;
}

interface FluffyWatchEndpointMusicConfig {
	hasPersistentPlaylistPanel: boolean;
	musicVideoType: string;
}

interface IPlaylistPanelVideoRendererThumbnail {
	thumbnails: ThumbnailElement[];
}

interface ThumbnailElement {
	url: string;
	width: number;
	height: number;
}
